// This file was generated by gpufort
#ifndef __MOD_SWAP_FORT2HIP_HIP_CPP__
#define __MOD_SWAP_FORT2HIP_HIP_CPP__
#include "hip/hip_runtime.h"
#include "hip/hip_complex.h"
#include "gpufort.h"


// BEGIN swap_153_c8dc21
/*
   HIP C++ implementation of the function/loop body of:

      !$cuf kernel do(2) <<<grid,tBlock>>>
      do j=1,ny
       do i=1,ng
         td_1s(i,j) = T_d(i,j)
         td_2s(i,j) = T_d(nx-ng+i,j)
       end do
      end do

*/

__global__ void  swap_153_c8dc21(
    float * __restrict__ td_1s,
    const int td_1s_n1,
    const int td_1s_n2,
    const int td_1s_lb1,
    const int td_1s_lb2,
    float * __restrict__ t_d,
    const int t_d_n1,
    const int t_d_n2,
    const int t_d_lb1,
    const int t_d_lb2,
    float * __restrict__ td_2s,
    const int td_2s_n1,
    const int td_2s_n2,
    const int td_2s_lb1,
    const int td_2s_lb2,
    int nx,
    int ng,
    int ny) {
  #undef _idx_td_1s
  #define _idx_td_1s(a,b) ((a-(td_1s_lb1))+td_1s_n1*(b-(td_1s_lb2)))
  #undef _idx_t_d
  #define _idx_t_d(a,b) ((a-(t_d_lb1))+t_d_n1*(b-(t_d_lb2)))
  #undef _idx_td_2s
  #define _idx_td_2s(a,b) ((a-(td_2s_lb1))+td_2s_n1*(b-(td_2s_lb2)))
    int i = 1 + (1)*(__gidx1 % (1 + ((ng) - (1))));
  int j = 1 + (1)*(__gidx1/((1 + ((ng) - (1)))) % (1 + ((ny) - (1))));
  if (loop_cond(i,ng,1)&&loop_cond(j,ny,1)) {
      td_1s[_idx_td_1s(i,j)]=t_d[_idx_t_d(i,j)];
      td_2s[_idx_td_2s(i,j)]=t_d[_idx_t_d((nx-ng+i),j)];
  }
}
extern "C" void launch_swap_153_c8dc21(
    dim3* grid,
    dim3* block,  
    const int sharedmem, 
    hipStream_t stream,
    float * __restrict__ td_1s,
    const int td_1s_n1,
    const int td_1s_n2,
    const int td_1s_lb1,
    const int td_1s_lb2,
    float * __restrict__ t_d,
    const int t_d_n1,
    const int t_d_n2,
    const int t_d_lb1,
    const int t_d_lb2,
    float * __restrict__ td_2s,
    const int td_2s_n1,
    const int td_2s_n2,
    const int td_2s_lb1,
    const int td_2s_lb2,
    int nx,
    int ng,
    int ny) {

  // launch kernel
  hipLaunchKernelGGL((swap_153_c8dc21), *grid, *block, sharedmem, stream, td_1s,td_1s_n1,td_1s_n2,td_1s_lb1,td_1s_lb2,t_d,t_d_n1,t_d_n2,t_d_lb1,t_d_lb2,td_2s,td_2s_n1,td_2s_n2,td_2s_lb1,td_2s_lb2,nx,ng,ny);

}
extern "C" void launch_swap_153_c8dc21_auto(
    const int sharedmem, 
    hipStream_t stream,
    float * __restrict__ td_1s,
    const int td_1s_n1,
    const int td_1s_n2,
    const int td_1s_lb1,
    const int td_1s_lb2,
    float * __restrict__ t_d,
    const int t_d_n1,
    const int t_d_n2,
    const int t_d_lb1,
    const int t_d_lb2,
    float * __restrict__ td_2s,
    const int td_2s_n1,
    const int td_2s_n2,
    const int td_2s_lb1,
    const int td_2s_lb2,
    int nx,
    int ng,
    int ny) {
  const int swap_153_c8dc21_blockX = 128;
  dim3 block(swap_153_c8dc21_blockX);
  const int swap_153_c8dc21_NX = (1 + ((ng) - (1)))*(1 + ((ny) - (1)));
  const int swap_153_c8dc21_gridX = divideAndRoundUp( swap_153_c8dc21_NX, swap_153_c8dc21_blockX );
  dim3 grid(swap_153_c8dc21_gridX);
   

  // launch kernel
  hipLaunchKernelGGL((swap_153_c8dc21), grid, block, sharedmem, stream, td_1s,td_1s_n1,td_1s_n2,td_1s_lb1,td_1s_lb2,t_d,t_d_n1,t_d_n2,t_d_lb1,t_d_lb2,td_2s,td_2s_n1,td_2s_n2,td_2s_lb1,td_2s_lb2,nx,ng,ny);

}
extern "C" void launch_swap_153_c8dc21_cpu1(
    const int sharedmem, 
    hipStream_t stream,
    float * __restrict__ td_1s,
    const int td_1s_n1,
    const int td_1s_n2,
    const int td_1s_lb1,
    const int td_1s_lb2,
    float * __restrict__ t_d,
    const int t_d_n1,
    const int t_d_n2,
    const int t_d_lb1,
    const int t_d_lb2,
    float * __restrict__ td_2s,
    const int td_2s_n1,
    const int td_2s_n2,
    const int td_2s_lb1,
    const int td_2s_lb2,
    int nx,
    int ng,
    int ny);

extern "C" void launch_swap_153_c8dc21_cpu(
    const int sharedmem, 
    hipStream_t stream,
    float * __restrict__ td_1s,
    const int td_1s_n1,
    const int td_1s_n2,
    const int td_1s_lb1,
    const int td_1s_lb2,
    float * __restrict__ t_d,
    const int t_d_n1,
    const int t_d_n2,
    const int t_d_lb1,
    const int t_d_lb2,
    float * __restrict__ td_2s,
    const int td_2s_n1,
    const int td_2s_n2,
    const int td_2s_lb1,
    const int td_2s_lb2,
    int nx,
    int ng,
    int ny) {

  // launch kernel
  launch_swap_153_c8dc21_cpu1(sharedmem, stream, td_1s,td_1s_n1,td_1s_n2,td_1s_lb1,td_1s_lb2,t_d,t_d_n1,t_d_n2,t_d_lb1,t_d_lb2,td_2s,td_2s_n1,td_2s_n2,td_2s_lb1,td_2s_lb2,nx,ng,ny);
}
// END swap_153_c8dc21
// BEGIN swap_170_d45ddb
/*
   HIP C++ implementation of the function/loop body of:

       !$cuf kernel do(2) <<<grid,tBlock>>>
       do j=1,ny
        do i=1,ng
         T_d(i-ng,j) = td_1r(i,j)
        end do
       end do

*/

__global__ void  swap_170_d45ddb(
    float * __restrict__ t_d,
    const int t_d_n1,
    const int t_d_n2,
    const int t_d_lb1,
    const int t_d_lb2,
    int ng,
    float * __restrict__ td_1r,
    const int td_1r_n1,
    const int td_1r_n2,
    const int td_1r_lb1,
    const int td_1r_lb2,
    int ny) {
  #undef _idx_t_d
  #define _idx_t_d(a,b) ((a-(t_d_lb1))+t_d_n1*(b-(t_d_lb2)))
  #undef _idx_td_1r
  #define _idx_td_1r(a,b) ((a-(td_1r_lb1))+td_1r_n1*(b-(td_1r_lb2)))
    int i = 1 + (1)*(__gidx1 % (1 + ((ng) - (1))));
  int j = 1 + (1)*(__gidx1/((1 + ((ng) - (1)))) % (1 + ((ny) - (1))));
  if (loop_cond(i,ng,1)&&loop_cond(j,ny,1)) {
      t_d[_idx_t_d((i-ng),j)]=td_1r[_idx_td_1r(i,j)];
  }
}
extern "C" void launch_swap_170_d45ddb(
    dim3* grid,
    dim3* block,  
    const int sharedmem, 
    hipStream_t stream,
    float * __restrict__ t_d,
    const int t_d_n1,
    const int t_d_n2,
    const int t_d_lb1,
    const int t_d_lb2,
    int ng,
    float * __restrict__ td_1r,
    const int td_1r_n1,
    const int td_1r_n2,
    const int td_1r_lb1,
    const int td_1r_lb2,
    int ny) {

  // launch kernel
  hipLaunchKernelGGL((swap_170_d45ddb), *grid, *block, sharedmem, stream, t_d,t_d_n1,t_d_n2,t_d_lb1,t_d_lb2,ng,td_1r,td_1r_n1,td_1r_n2,td_1r_lb1,td_1r_lb2,ny);

}
extern "C" void launch_swap_170_d45ddb_auto(
    const int sharedmem, 
    hipStream_t stream,
    float * __restrict__ t_d,
    const int t_d_n1,
    const int t_d_n2,
    const int t_d_lb1,
    const int t_d_lb2,
    int ng,
    float * __restrict__ td_1r,
    const int td_1r_n1,
    const int td_1r_n2,
    const int td_1r_lb1,
    const int td_1r_lb2,
    int ny) {
  const int swap_170_d45ddb_blockX = 128;
  dim3 block(swap_170_d45ddb_blockX);
  const int swap_170_d45ddb_NX = (1 + ((ng) - (1)))*(1 + ((ny) - (1)));
  const int swap_170_d45ddb_gridX = divideAndRoundUp( swap_170_d45ddb_NX, swap_170_d45ddb_blockX );
  dim3 grid(swap_170_d45ddb_gridX);
   

  // launch kernel
  hipLaunchKernelGGL((swap_170_d45ddb), grid, block, sharedmem, stream, t_d,t_d_n1,t_d_n2,t_d_lb1,t_d_lb2,ng,td_1r,td_1r_n1,td_1r_n2,td_1r_lb1,td_1r_lb2,ny);

}
extern "C" void launch_swap_170_d45ddb_cpu1(
    const int sharedmem, 
    hipStream_t stream,
    float * __restrict__ t_d,
    const int t_d_n1,
    const int t_d_n2,
    const int t_d_lb1,
    const int t_d_lb2,
    int ng,
    float * __restrict__ td_1r,
    const int td_1r_n1,
    const int td_1r_n2,
    const int td_1r_lb1,
    const int td_1r_lb2,
    int ny);

extern "C" void launch_swap_170_d45ddb_cpu(
    const int sharedmem, 
    hipStream_t stream,
    float * __restrict__ t_d,
    const int t_d_n1,
    const int t_d_n2,
    const int t_d_lb1,
    const int t_d_lb2,
    int ng,
    float * __restrict__ td_1r,
    const int td_1r_n1,
    const int td_1r_n2,
    const int td_1r_lb1,
    const int td_1r_lb2,
    int ny) {

  // launch kernel
  launch_swap_170_d45ddb_cpu1(sharedmem, stream, t_d,t_d_n1,t_d_n2,t_d_lb1,t_d_lb2,ng,td_1r,td_1r_n1,td_1r_n2,td_1r_lb1,td_1r_lb2,ny);
}
// END swap_170_d45ddb
// BEGIN swap_179_b0e0a8
/*
   HIP C++ implementation of the function/loop body of:

       !$cuf kernel do(2) <<<grid,tBlock>>>
       do j=1,ny
        do i=1,ng
         T_d(nx+i,j) = td_2r(i,j)
        end do
       end do

*/

__global__ void  swap_179_b0e0a8(
    float * __restrict__ t_d,
    const int t_d_n1,
    const int t_d_n2,
    const int t_d_lb1,
    const int t_d_lb2,
    int nx,
    float * __restrict__ td_2r,
    const int td_2r_n1,
    const int td_2r_n2,
    const int td_2r_lb1,
    const int td_2r_lb2,
    int ng,
    int ny) {
  #undef _idx_t_d
  #define _idx_t_d(a,b) ((a-(t_d_lb1))+t_d_n1*(b-(t_d_lb2)))
  #undef _idx_td_2r
  #define _idx_td_2r(a,b) ((a-(td_2r_lb1))+td_2r_n1*(b-(td_2r_lb2)))
    int i = 1 + (1)*(__gidx1 % (1 + ((ng) - (1))));
  int j = 1 + (1)*(__gidx1/((1 + ((ng) - (1)))) % (1 + ((ny) - (1))));
  if (loop_cond(i,ng,1)&&loop_cond(j,ny,1)) {
      t_d[_idx_t_d((nx+i),j)]=td_2r[_idx_td_2r(i,j)];
  }
}
extern "C" void launch_swap_179_b0e0a8(
    dim3* grid,
    dim3* block,  
    const int sharedmem, 
    hipStream_t stream,
    float * __restrict__ t_d,
    const int t_d_n1,
    const int t_d_n2,
    const int t_d_lb1,
    const int t_d_lb2,
    int nx,
    float * __restrict__ td_2r,
    const int td_2r_n1,
    const int td_2r_n2,
    const int td_2r_lb1,
    const int td_2r_lb2,
    int ng,
    int ny) {

  // launch kernel
  hipLaunchKernelGGL((swap_179_b0e0a8), *grid, *block, sharedmem, stream, t_d,t_d_n1,t_d_n2,t_d_lb1,t_d_lb2,nx,td_2r,td_2r_n1,td_2r_n2,td_2r_lb1,td_2r_lb2,ng,ny);

}
extern "C" void launch_swap_179_b0e0a8_auto(
    const int sharedmem, 
    hipStream_t stream,
    float * __restrict__ t_d,
    const int t_d_n1,
    const int t_d_n2,
    const int t_d_lb1,
    const int t_d_lb2,
    int nx,
    float * __restrict__ td_2r,
    const int td_2r_n1,
    const int td_2r_n2,
    const int td_2r_lb1,
    const int td_2r_lb2,
    int ng,
    int ny) {
  const int swap_179_b0e0a8_blockX = 128;
  dim3 block(swap_179_b0e0a8_blockX);
  const int swap_179_b0e0a8_NX = (1 + ((ng) - (1)))*(1 + ((ny) - (1)));
  const int swap_179_b0e0a8_gridX = divideAndRoundUp( swap_179_b0e0a8_NX, swap_179_b0e0a8_blockX );
  dim3 grid(swap_179_b0e0a8_gridX);
   

  // launch kernel
  hipLaunchKernelGGL((swap_179_b0e0a8), grid, block, sharedmem, stream, t_d,t_d_n1,t_d_n2,t_d_lb1,t_d_lb2,nx,td_2r,td_2r_n1,td_2r_n2,td_2r_lb1,td_2r_lb2,ng,ny);

}
extern "C" void launch_swap_179_b0e0a8_cpu1(
    const int sharedmem, 
    hipStream_t stream,
    float * __restrict__ t_d,
    const int t_d_n1,
    const int t_d_n2,
    const int t_d_lb1,
    const int t_d_lb2,
    int nx,
    float * __restrict__ td_2r,
    const int td_2r_n1,
    const int td_2r_n2,
    const int td_2r_lb1,
    const int td_2r_lb2,
    int ng,
    int ny);

extern "C" void launch_swap_179_b0e0a8_cpu(
    const int sharedmem, 
    hipStream_t stream,
    float * __restrict__ t_d,
    const int t_d_n1,
    const int t_d_n2,
    const int t_d_lb1,
    const int t_d_lb2,
    int nx,
    float * __restrict__ td_2r,
    const int td_2r_n1,
    const int td_2r_n2,
    const int td_2r_lb1,
    const int td_2r_lb2,
    int ng,
    int ny) {

  // launch kernel
  launch_swap_179_b0e0a8_cpu1(sharedmem, stream, t_d,t_d_n1,t_d_n2,t_d_lb1,t_d_lb2,nx,td_2r,td_2r_n1,td_2r_n2,td_2r_lb1,td_2r_lb2,ng,ny);
}
// END swap_179_b0e0a8
#endif // __MOD_SWAP_FORT2HIP_HIP_CPP__ 